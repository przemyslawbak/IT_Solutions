<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="angular" xml:space="preserve">
    <value>We can create a SPA using the Angular framework. It allows for a better user experience. Angular is a TypeScript-based open-source web application framework led by the Angular Team at Google and by a community of individuals and corporations. Angular is a complete rewrite from the same team that built AngularJS.</value>
  </data>
  <data name="backend" xml:space="preserve">
    <value>If you need software that will improve your daily work or the work of your company? Or maybe you want to improve or develop the current systems? We are able to provide you with backend applications that will meet your requirements.</value>
  </data>
  <data name="Backend applications" xml:space="preserve">
    <value>Backend applications</value>
  </data>
  <data name="business" xml:space="preserve">
    <value>If you are looking for someone who will make a website business card for you, or a web application dedicated specifically to your business and made according to your requirements, we can design it, create it from scratch, or develop an existing solution that you use.</value>
  </data>
  <data name="Business websites" xml:space="preserve">
    <value>Business websites</value>
  </data>
  <data name="console" xml:space="preserve">
    <value>Sometimes the client needs a simple application without a fancy user interface to perform calculations or file operations. Console applications run on local machines with simple and convenient control work for this purpose. We are able to make one on request.</value>
  </data>
  <data name="Console applications" xml:space="preserve">
    <value>Console applications</value>
  </data>
  <data name="core" xml:space="preserve">
    <value>We work with ASP.NET Core. It is a free open source framework and successor to ASP.NET, developed by Microsoft. It is a modular structure that runs on both the full .NET Framework, Windows and the cross-platform .NET Core. The perfect solution for both corporations and small businesses.</value>
  </data>
  <data name="desktop" xml:space="preserve">
    <value>A desktop windowing application is a program that can be run on a computer to perform a specific task by an end user. We are able to design and provide you with such a application created according to your guidelines and requirements.</value>
  </data>
  <data name="mssql" xml:space="preserve">
    <value>We use Microsoft SQL Server in our projects. It is a reliable relational database management system developed by Microsoft. As a database server, it is software whose primary function is to store and retrieve data as required by other applications that can run on the same computer or on a different computer on the network.</value>
  </data>
  <data name="outsourcing" xml:space="preserve">
    <value>We are ready to cooperate with your company both in the implementation of entire projects and only its individual parts, using the technologies we work with.</value>
  </data>
  <data name="Outsourcing_" xml:space="preserve">
    <value>Outsourcing</value>
  </data>
  <data name="rest" xml:space="preserve">
    <value>On request, we create RESTful Web API. Restful Web Services is a lightweight, maintainable, and scalable service that is built on the REST architecture. Restful Web Service, expose API from your application in a secure, uniform, stateless manner to the calling client app.</value>
  </data>
  <data name="RESTful Web Apis" xml:space="preserve">
    <value>RESTful Web Apis</value>
  </data>
  <data name="uiux" xml:space="preserve">
    <value>We design the appearance and interfaces for various applications, ranging from web applications, through mobile applications, to programs run on local machines, all in cooperation with the client.</value>
  </data>
  <data name="UiUx Design" xml:space="preserve">
    <value>UI/UX design</value>
  </data>
  <data name="web" xml:space="preserve">
    <value>Web application Is application software that runs on a web server, unlike computer-based software programs that are run locally on the operating system (OS) of the device. Web applications are accessed by the user through a web browser with an active network connection. We are ready to create and maintain various types of responsive web applications.</value>
  </data>
  <data name="Web applications" xml:space="preserve">
    <value>Web applications</value>
  </data>
  <data name="Windows desktop applications" xml:space="preserve">
    <value>Windows desktop applications</value>
  </data>
  <data name="wpf" xml:space="preserve">
    <value>Windows Presentation Foundation is used by us to create desktop applications and Web API clients. It is a free and open-source graphical subsystem originally developed by Microsoft for rendering user interfaces in Windows-based applications.</value>
  </data>
</root>